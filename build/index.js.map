{
  "version": 3,
  "sources": ["../app/entry.server.tsx", "../app/root.tsx", "../app/routes/people.$personId_.edit.tsx", "../app/api/connect.ts", "../app/api/models/person.model.ts", "../app/api/models/group.model.ts", "../app/api/people.ts", "../app/routes/groups.$groupId_.edit.tsx", "../app/api/groups.ts", "../app/routes/people.$personId.tsx", "../app/components/groupsList.tsx", "../app/routes/groups.$groupId.tsx", "../app/components/peopleList.tsx", "../app/routes/groups.tsx", "../app/routes/people.tsx", "../app/routes/_index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["/**\r\n * By default, Remix will handle generating the HTTP Response for you.\r\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\r\n * For more information, see https://remix.run/file-conventions/entry.server\r\n */\r\n\r\nimport { PassThrough } from \"node:stream\";\r\n\r\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\r\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\r\nimport { RemixServer } from \"@remix-run/react\";\r\nimport isbot from \"isbot\";\r\nimport { renderToPipeableStream } from \"react-dom/server\";\r\n\r\nconst ABORT_DELAY = 5_000;\r\n\r\nexport default function handleRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext,\r\n  loadContext: AppLoadContext\r\n) {\r\n  return isbot(request.headers.get(\"user-agent\"))\r\n    ? handleBotRequest(\r\n        request,\r\n        responseStatusCode,\r\n        responseHeaders,\r\n        remixContext\r\n      )\r\n    : handleBrowserRequest(\r\n        request,\r\n        responseStatusCode,\r\n        responseHeaders,\r\n        remixContext\r\n      );\r\n}\r\n\r\nfunction handleBotRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    let shellRendered = false;\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <RemixServer\r\n        context={remixContext}\r\n        url={request.url}\r\n        abortDelay={ABORT_DELAY}\r\n      />,\r\n      {\r\n        onAllReady() {\r\n          shellRendered = true;\r\n          const body = new PassThrough();\r\n          const stream = createReadableStreamFromReadable(body);\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(stream, {\r\n              headers: responseHeaders,\r\n              status: responseStatusCode,\r\n            })\r\n          );\r\n\r\n          pipe(body);\r\n        },\r\n        onShellError(error: unknown) {\r\n          reject(error);\r\n        },\r\n        onError(error: unknown) {\r\n          responseStatusCode = 500;\r\n          // Log streaming rendering errors from inside the shell.  Don't log\r\n          // errors encountered during initial shell rendering since they'll\r\n          // reject and get logged in handleDocumentRequest.\r\n          if (shellRendered) {\r\n            console.error(error);\r\n          }\r\n        },\r\n      }\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n}\r\n\r\nfunction handleBrowserRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    let shellRendered = false;\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <RemixServer\r\n        context={remixContext}\r\n        url={request.url}\r\n        abortDelay={ABORT_DELAY}\r\n      />,\r\n      {\r\n        onShellReady() {\r\n          shellRendered = true;\r\n          const body = new PassThrough();\r\n          const stream = createReadableStreamFromReadable(body);\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(stream, {\r\n              headers: responseHeaders,\r\n              status: responseStatusCode,\r\n            })\r\n          );\r\n\r\n          pipe(body);\r\n        },\r\n        onShellError(error: unknown) {\r\n          reject(error);\r\n        },\r\n        onError(error: unknown) {\r\n          responseStatusCode = 500;\r\n          // Log streaming rendering errors from inside the shell.  Don't log\r\n          // errors encountered during initial shell rendering since they'll\r\n          // reject and get logged in handleDocumentRequest.\r\n          if (shellRendered) {\r\n            console.error(error);\r\n          }\r\n        },\r\n      }\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n}\r\n", "import type { LinksFunction, MetaFunction } from \"@remix-run/node\";\n\nimport {\n  Links,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration } from\n\"@remix-run/react\";\nimport appStylesHref from \"./app.css\";\n\nexport const meta: MetaFunction = () => {\n  return [\n  { title: \"Root | Root\" }];\n\n};\n\nexport const links: LinksFunction = () => [\n{ rel: \"stylesheet\", href: appStylesHref }];\n\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\r\n      <head>\r\n        <meta charSet=\"utf-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n        <Meta />\r\n        <Links />\r\n      </head>\r\n      <body>\r\n        <Outlet />\r\n        <ScrollRestoration />\r\n        <Scripts />\r\n      </body>\r\n    </html>);\n\n}", "import { ActionFunction, ActionFunctionArgs, LoaderFunction } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport { Form, redirect, useNavigate } from \"react-router-dom\";\r\nimport invariant from \"tiny-invariant\";\r\nimport { Person, getPersonById, updatePerson } from \"~/api/people\";\r\n\r\nexport const loader: LoaderFunction = async ({ params }) => {\r\n    invariant(params.personId, \"Missing personId param\");\r\n    const person: Person = await getPersonById(params.personId);\r\n    if (!person) {\r\n        throw new Response(\"Not Found\", { status: 404 });\r\n    }\r\n    return person;\r\n};\r\n\r\nexport const action: ActionFunction = async ({ params, request }: ActionFunctionArgs) => {\r\n    invariant(params.personId, \"Missing person Id param\");\r\n    const formData = await request.formData();\r\n    // const updates = Object.fromEntries(formData);\r\n    const name = String(formData.get('name'));\r\n    await updatePerson(params.personId, name);\r\n    return redirect(`/people/${params.personId}`);\r\n}\r\n\r\nexport default function EditPerson() {\r\n    const person: Person = useLoaderData<typeof loader>();\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <Form id=\"contact-form\" method=\"post\">\r\n            <p>\r\n                <span>Name:</span>\r\n                <input\r\n                    defaultValue={person.name}\r\n                    aria-label=\"name\"\r\n                    name=\"name\"\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                />\r\n            </p>\r\n            <p>\r\n                <button type=\"submit\" name=\"cancel\">Save</button>\r\n                <button onClick={() => navigate(-1)} type=\"button\">\r\n                    Cancel\r\n                </button>\r\n            </p>\r\n        </Form>\r\n    )\r\n}", "import mongoose from \"mongoose\";\r\nmongoose.set('strictQuery', false);\r\n\r\nexport async function dbConnect() {\r\n    await mongoose.connect(\"mongodb://127.0.0.1:27017/ServerSide\");\r\n    console.log(\"Connected\");\r\n}", "import mongoose, { Schema } from \"mongoose\";\r\n\r\nconst personSchema = new mongoose.Schema({\r\n    name: { type: String },\r\n    groups: {\r\n        type: [mongoose.Schema.Types.ObjectId],\r\n        ref: 'group'\r\n    }\r\n})\r\n\r\nexport const personModel = mongoose.models.person || mongoose.model('person', personSchema, 'Persons');\r\n", "import mongoose from \"mongoose\";\r\n\r\nconst groupSchema = new mongoose.Schema({\r\n  name: { type: String },\r\n  parent: {\r\n    type: mongoose.Schema.Types.ObjectId,\r\n    ref: \"group\",\r\n  },\r\n  child_groups: {\r\n    type: [mongoose.Schema.Types.ObjectId],\r\n    ref: \"group\",\r\n  },\r\n  people: {\r\n    type: [mongoose.Schema.Types.ObjectId],\r\n    ref: \"person\",\r\n  }\r\n});\r\n\r\nexport const groupModel =\r\n  mongoose.models.group || mongoose.model(\"group\", groupSchema, \"Groups\");\r\n", "import { dbConnect } from \"~/api/connect\";\r\nimport { personModel } from \"~/api/models/person.model\";\r\nimport type { Group } from \"./groups\";\r\nimport type { ObjectId } from \"mongodb\";\r\nimport { groupModel } from \"./models/group.model\";\r\n\r\nexport type Person = {\r\n  _id: ObjectId;\r\n  name: string;\r\n  groups?: Group[];\r\n};\r\n\r\nexport async function getAllPeople(name?: string | null) {\r\n  await dbConnect();\r\n  let people: Person[] = await personModel\r\n    .find({})\r\n    .populate({ path: \"groups\", model: groupModel });\r\n  if (name == null) return people;\r\n  else\r\n    return people.filter((person) =>\r\n      name ? person.name.toLowerCase().includes(name.toLowerCase()) : true\r\n    );\r\n}\r\n\r\nexport async function getPersonById(id: string) {\r\n  const people = await personModel\r\n    .findById(id)\r\n    .populate({ path: \"groups\", model: groupModel });\r\n  return people;\r\n}\r\n\r\nexport async function deletePerson(id: string) {\r\n  console.log(id);\r\n  await personModel.findByIdAndDelete(id);\r\n}\r\n\r\nexport async function createPerson() {\r\n  await personModel.create({});\r\n}\r\n\r\nexport async function updatePerson(id: string, name: string) {\r\n  await personModel.findByIdAndUpdate(id, { name: name });\r\n}\r\n", "import { ActionFunction, ActionFunctionArgs, LoaderFunction } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport { Form, redirect, useNavigate } from \"react-router-dom\";\r\nimport invariant from \"tiny-invariant\";\r\nimport { Group, getGroupById, updateGroup } from \"~/api/groups\";\r\n\r\nexport const loader: LoaderFunction = async ({ params }) => {\r\n    invariant(params.groupId, \"Missing groupId param\");\r\n    const person: Group = await getGroupById(params.groupId);\r\n    if (!person) {\r\n        throw new Response(\"Not Found\", { status: 404 });\r\n    }\r\n    return person;\r\n};\r\n\r\nexport const action: ActionFunction = async ({ params, request }: ActionFunctionArgs) => {\r\n    invariant(params.groupId, \"Missing groupId param\");\r\n    const formData = await request.formData();\r\n    // const updates = Object.fromEntries(formData);\r\n    const name = String(formData.get('name'));\r\n    await updateGroup(params.groupId, name);\r\n    return redirect(`/groups/${params.groupId}`);\r\n}\r\n\r\nexport default function EditGroup() {\r\n    const group: Group = useLoaderData<typeof loader>();\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <Form id=\"contact-form\" method=\"post\">\r\n            <p>\r\n                <span>Name</span>\r\n                <input\r\n                    defaultValue={group.name}\r\n                    aria-label=\"name\"\r\n                    name=\"name\"\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                />\r\n            </p>\r\n            <p>\r\n                <button type=\"submit\" name=\"cancel\">Save</button>\r\n                <button onClick={() => navigate(-1)} type=\"button\">\r\n                    Cancel\r\n                </button>\r\n            </p>\r\n        </Form>\r\n    )\r\n}", "import { dbConnect } from \"~/api/connect\";\r\nimport { groupModel } from \"~/api/models/group.model\";\r\nimport { personModel } from \"./models/person.model\";\r\nimport type { Person } from \"./people\";\r\nimport type { ObjectId } from \"mongodb\";\r\n\r\nexport type Group = {\r\n    _id: ObjectId;\r\n    name: string;\r\n    parent?: Person;\r\n    child_groups?: Group[];\r\n    people?: Person[];\r\n}\r\nconst query = [\r\n    {\r\n        path: 'child_groups',\r\n        model: groupModel\r\n    },\r\n    {\r\n        path: 'people',\r\n        model: personModel\r\n    },\r\n    {\r\n        path: 'parent',\r\n        model: groupModel\r\n    }\r\n];\r\n\r\nexport async function getAllGroups(name?: string | null) {\r\n    await dbConnect();\r\n\r\n    const groups: Group[] = await groupModel.find({}).populate(query);\r\n    return groups.filter(group => (\r\n        name ? group.name.toLowerCase().includes(name.toLowerCase()) : true\r\n    ));\r\n}\r\n\r\nexport async function getGroupById(id: string) {\r\n    const people = await groupModel.findById(id).populate(query);\r\n    return people;\r\n}\r\n\r\nexport async function deleteGroup(id: string) {\r\n    console.log(id);\r\n    await groupModel.findByIdAndDelete(id);\r\n  }\r\n  \r\n  export async function createGroup() {\r\n    await groupModel.create({});\r\n  }\r\n  \r\n  export async function updateGroup(id: string, name: string) {\r\n    await groupModel.findByIdAndUpdate(id, { name: name });\r\n  }", "import { ActionFunction, LinksFunction, redirect, type LoaderFunction } from \"@remix-run/node\";\nimport { Form, MetaFunction, useLoaderData } from \"@remix-run/react\";\nimport invariant from \"tiny-invariant\";\nimport { deletePerson, getPersonById, type Person } from \"~/api/people\";\nimport GroupsList from \"~/components/groupsList\";\nimport appStylesHref from \"../app.css\";\n\nexport const meta: MetaFunction = () => {\n  return [{ title: 'Person' }];\n};\n\nexport const links: LinksFunction = () => [\n{ rel: \"stylesheet\", href: appStylesHref }];\n\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  invariant(params.personId, \"Missing person Id param\");\n  const person: Person = await getPersonById(params.personId);\n  console.log('fetching person... -->', person.name);\n  return person;\n};\n\nexport const action: ActionFunction = async ({ params }) => {\n  invariant(params.personId, \"Missing person Id param\");\n  await deletePerson(params.personId);\n  return redirect(\"/people\");\n};\n\nexport default function Person() {\n  const person: Person = useLoaderData<typeof loader>();\n\n  return (\n    <div>\r\n            <h1>{person.name} </h1>\r\n            <div>\r\n                <GroupsList groups={person.groups} name=\"Groups\" />\r\n            </div>\r\n            <div id=\"editor\">\r\n                <Form\n          name=\"destroy\"\n          method=\"post\"\n          onSubmit={(event) => {\n            const response = confirm(\n              \"Please confirm you want to delete this record.\"\n            );\n            if (!response) {\n              event.preventDefault();\n            }\n          }}>\r\n                    <button\n            aria-label=\"delete\"\n            name=\"_action\"\n            className=\"inline-block\">\n            \r\n                        Delete\r\n                    </button>\r\n                </Form>\r\n                <Form action=\"edit\">\r\n                    <button type=\"submit\">Edit</button>\r\n                </Form>\r\n            </div>\r\n        </div>);\n\n}", "import { NavLink } from \"@remix-run/react\";\nimport { Group } from \"~/api/groups\";\nimport styles from '../tailwind.css';\nimport { LinksFunction } from \"@remix-run/node\";\n\nexport const links: LinksFunction = () => {\n  return [{ rel: 'stylesheet', href: styles }];\n};\n\ntype GroupsListProps = {\n  groups?: Group[];\n  name: string;\n};\nexport default function GroupsList({ groups, name }: GroupsListProps) {\n  return (\n    <div id=\"list-container\">\r\n            <h3 className=\"text-3xl\">{name}:</h3>\r\n            <ul id=\"list\">\r\n                {groups?.[0] ?\n        groups?.map((group) =>\n        <li>\r\n                            <NavLink\n            id=\"listLink\"\n            to={'/' + 'groups/' + group._id}\n            prefetch=\"intent\">\n            \r\n                                {group.name}\r\n                            </NavLink>\r\n                        </li>\n        ) :\n        <p>No {name}</p>}\n        \r\n            </ul>\r\n        </div>);\n\n}", "import { ActionFunction, LinksFunction, redirect, type LoaderFunction } from \"@remix-run/node\";\nimport { Form, MetaFunction, NavLink, useLoaderData } from \"@remix-run/react\";\nimport invariant from \"tiny-invariant\";\nimport { deleteGroup, getGroupById, type Group } from \"~/api/groups\";\nimport GroupsList from \"~/components/groupsList\";\nimport PeopleList from \"~/components/peopleList\";\nimport appStylesHref from \"../app.css\";\n\nexport const meta: MetaFunction = () => {\n  return [{ title: 'Group' }];\n};\n\nexport const links: LinksFunction = () => [\n{ rel: \"stylesheet\", href: appStylesHref }];\n\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  invariant(params.groupId, \"Missing group Id param\");\n  const group: Group = await getGroupById(params.groupId);\n  console.log('fetching group... -->', group.name);\n  return group;\n};\n\nexport const action: ActionFunction = async ({ params }) => {\n  invariant(params.groupId, \"Missing person Id param\");\n  await deleteGroup(params.groupId);\n  return redirect(\"/groups\");\n};\n\nexport default function Group() {\n  const group: Group = useLoaderData<typeof loader>();\n\n  return (\n    <div>\r\n            <h1>{group.name} </h1>\r\n            <div>\r\n                <GroupsList groups={group.child_groups} name=\"Child Groups\" />\r\n                <PeopleList people={group.people} name=\"Children\" />\r\n                <h3 className=\"text-3xl\">Parent:</h3>\r\n                {group.parent ?\n        <NavLink\n          id=\"listLink\"\n          to={'/' + 'groups/' + group.parent._id}\n          title={group.parent.name}\n          prefetch=\"intent\">\n          \r\n                        <div>{group.parent.name}</div>\r\n                    </NavLink> :\n\n        <p>No parent</p>}\n        \r\n            </div>\r\n            <div id=\"editor\">\r\n                <Form\n          name=\"destroy\"\n          method=\"post\"\n          onSubmit={(event) => {\n            const response = confirm(\n              \"Please confirm you want to delete this record.\"\n            );\n            if (!response) {\n              event.preventDefault();\n            }\n          }}>\r\n                    <button\n            aria-label=\"delete\"\n            name=\"_action\"\n            className=\"inline-block\">\n            \r\n                        Delete\r\n                    </button>\r\n                </Form>\r\n                <Form action=\"edit\">\r\n                    <button type=\"submit\">Edit</button>\r\n                </Form>\r\n            </div>\r\n        </div>);\n\n}", "import { Form, NavLink } from \"@remix-run/react\";\r\nimport { Person } from \"~/api/people\";\r\n\r\ntype PeopleListProps = {\r\n    people?: Person[];\r\n    name?: string\r\n};\r\n\r\nexport default function PeopleList({ people, name }: PeopleListProps) {\r\n    return (\r\n        <div id=\"list-container\">\r\n            <h3 className=\"text-3xl\">{name ? name + \":\" : \"\"}</h3>\r\n            <ul id=\"list\">\r\n                {people?.[0] ?\r\n                    people?.map((person) => (\r\n                        <li>\r\n                            <NavLink\r\n                                id=\"listLink\"\r\n                                to={'/' + 'people/' + person._id}\r\n                                prefetch=\"intent\"\r\n                            >\r\n                                {person.name}\r\n                            </NavLink>\r\n                        </li>\r\n                    )) :\r\n                    <p>No {name}</p>\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n}", "import { json, type ActionFunction, type ActionFunctionArgs, type LoaderFunction, type MetaFunction, redirect } from \"@remix-run/node\";\r\nimport { Form, Link, Outlet, useLoaderData } from \"@remix-run/react\";\r\nimport { createGroup, deleteGroup, getAllGroups, type Group } from \"~/api/groups\";\r\n\r\n\r\nexport const meta: MetaFunction = () => {\r\n  return [\r\n    { title: \"Groups | List\" },\r\n  ];\r\n};\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const url = new URL(request.url);\r\n  const name = url.searchParams.get('name');\r\n  const groups: Group[] = await getAllGroups(name);\r\n  return groups;\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }: ActionFunctionArgs) => {\r\n  const contact = await createGroup();\r\n  return json({ contact });\r\n};\r\n\r\nexport default function GroupsIndex() {\r\n  const groups = useLoaderData<Group[]>();\r\n\r\n  return (\r\n    <body>\r\n      <div id=\"sidebar\">\r\n        <h1>People List</h1>\r\n        <div>\r\n          <Form id=\"search-form\" role=\"search\">\r\n            <label className=\"font-bold\">\r\n              <input\r\n                type=\"search\"\r\n                name=\"name\"\r\n                placeholder=\"Type a name...\"\r\n                className=\"border-2 rounded py-2 px-3\"\r\n              />\r\n            </label>\r\n          </Form>\r\n          <Form method=\"post\">\r\n            <button\r\n              type=\"submit\"\r\n              name=\"_action\"\r\n              value=\"create\"\r\n            >\r\n              New\r\n            </button>\r\n          </Form>\r\n        </div>\r\n        <nav>\r\n          <ul>\r\n            {groups.map((group) => (\r\n              <li key={group._id}>\r\n                <Link to={group._id}>\r\n                  {group.name ?\r\n                    group.name :\r\n                    <i>No Name</i>}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n      <div id=\"detail\">\r\n        <Outlet />\r\n      </div>\r\n      <Link to={\"/\"}>Back</Link>\r\n    </body>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n", "import { ActionFunctionArgs, json, redirect, type ActionFunction, type LoaderFunction, type MetaFunction } from \"@remix-run/node\";\r\nimport { Form, Link, Outlet, useLoaderData } from \"@remix-run/react\";\r\nimport { createPerson, deletePerson, getAllPeople, type Person } from \"~/api/people\";\r\n\r\nexport const meta: MetaFunction = () => {\r\n  return [\r\n    { title: \"People | List\" },\r\n  ];\r\n};\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const url = new URL(request.url);\r\n  const name = url.searchParams.get('name');\r\n  const people: Person[] = await getAllPeople(name);\r\n  return people;\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }: ActionFunctionArgs) => {\r\n  const contact = await createPerson();\r\n  return json({ contact });\r\n};\r\n\r\nexport default function PeopleIndex() {\r\n  const people = useLoaderData<Person[]>();\r\n\r\n  return (\r\n    <body>\r\n      <div id=\"sidebar\">\r\n        <h1>People List</h1>\r\n        <div>\r\n          <Form id=\"search-form\" role=\"search\">\r\n            <label className=\"font-bold\">\r\n              <input\r\n                type=\"search\"\r\n                name=\"name\"\r\n                placeholder=\"Type a name...\"\r\n                className=\"border-2 rounded py-2 px-3\"\r\n              />\r\n            </label>\r\n          </Form>\r\n          <Form method=\"post\">\r\n            <button\r\n              type=\"submit\"\r\n              name=\"_action\"\r\n              value=\"create\"\r\n            >\r\n              New\r\n            </button>\r\n          </Form>\r\n        </div>\r\n        <nav>\r\n          <ul>\r\n            {people.map((person) => (\r\n              <li key={person._id}>\r\n                <Link to={person._id}>\r\n                  {person.name ?\r\n                    person.name :\r\n                    <i>No Name</i>}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n      <div id=\"detail\">\r\n        <Outlet />\r\n      </div>\r\n      <Link to={\"/\"}>Back</Link>\r\n    </body>\r\n  );\r\n}\r\n\r\n", "import { LinksFunction } from \"@remix-run/node\";\nimport { NavLink, MetaFunction } from \"@remix-run/react\";\nimport style from '../tailwind.css';\n\nexport const meta: MetaFunction = () => {\n  return [\n  { title: \"People | Groups\" }];\n\n};\nexport const links: LinksFunction = () => [\n{ rel: \"stylesheet\", href: style }];\n\n\nexport default function Index() {\n  return (\n    <div>\r\n            <body className=\"flex h-screen justify-center items-center text-center bg-[#f7f7f7]\">\r\n                <NavLink\n          to={'/people'}\n          className=\"relative block px-[0] py-[4px] [font:700_3rem_Raleway,_sans-serif] m-4\">\n          \r\n                    People\r\n                </NavLink>\r\n\r\n                <NavLink\n          to={'/groups'}\n          className=\"relative block px-[0] py-[4px] [font:700_3rem_Raleway,_sans-serif] m-4\">\n          \r\n                    Groups\r\n                </NavLink>\r\n            </body>\r\n        </div>);\n\n}", "export default {'entry':{'module':'/build/entry.client-MHXSSI65.js','imports':['/build/_shared/chunk-ZWGWGGVF.js','/build/_shared/chunk-GIAAE3CH.js','/build/_shared/chunk-XU7DNSPJ.js','/build/_shared/chunk-FNYN433U.js','/build/_shared/chunk-5SRPZOGC.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-BOXFZXVX.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-K575LEVR.js','imports':['/build/_shared/chunk-VBSRPLQ4.js'],'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-LGUJXZHZ.js','imports':['/build/_shared/chunk-QZTXNDX4.js'],'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/groups':{'id':'routes/groups','parentId':'root','path':'groups','index':undefined,'caseSensitive':undefined,'module':'/build/routes/groups-B3R2GKD2.js','imports':['/build/_shared/chunk-G7CHZRZX.js'],'hasAction':true,'hasLoader':true,'hasErrorBoundary':false},'routes/groups.$groupId':{'id':'routes/groups.$groupId','parentId':'routes/groups','path':':groupId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/groups.$groupId-IMQT4IGN.js','imports':['/build/_shared/chunk-ZM5ZMPFN.js','/build/_shared/chunk-QZTXNDX4.js','/build/_shared/chunk-VBSRPLQ4.js','/build/_shared/chunk-AUYLHJJM.js'],'hasAction':true,'hasLoader':true,'hasErrorBoundary':false},'routes/groups.$groupId_.edit':{'id':'routes/groups.$groupId_.edit','parentId':'routes/groups','path':':groupId/edit','index':undefined,'caseSensitive':undefined,'module':'/build/routes/groups.$groupId_.edit-W52CRTSO.js','imports':['/build/_shared/chunk-AUYLHJJM.js'],'hasAction':true,'hasLoader':true,'hasErrorBoundary':false},'routes/people':{'id':'routes/people','parentId':'root','path':'people','index':undefined,'caseSensitive':undefined,'module':'/build/routes/people-CYD4GUCD.js','imports':['/build/_shared/chunk-G7CHZRZX.js'],'hasAction':true,'hasLoader':true,'hasErrorBoundary':false},'routes/people.$personId':{'id':'routes/people.$personId','parentId':'routes/people','path':':personId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/people.$personId-OMETJBSM.js','imports':['/build/_shared/chunk-ZM5ZMPFN.js','/build/_shared/chunk-QZTXNDX4.js','/build/_shared/chunk-VBSRPLQ4.js','/build/_shared/chunk-AUYLHJJM.js'],'hasAction':true,'hasLoader':true,'hasErrorBoundary':false},'routes/people.$personId_.edit':{'id':'routes/people.$personId_.edit','parentId':'routes/people','path':':personId/edit','index':undefined,'caseSensitive':undefined,'module':'/build/routes/people.$personId_.edit-C7FWHUS4.js','imports':['/build/_shared/chunk-AUYLHJJM.js'],'hasAction':true,'hasLoader':true,'hasErrorBoundary':false}},'version':'6bfc0bf2','hmr':{'runtime':'/build/_shared\\\\chunk-5SRPZOGC.js','timestamp':1698676441561},'url':'/build/manifest-6BFC0BF2.js'};", "\nimport * as entryServer from \"C:\\\\Users\\\\user\\\\Desktop\\\\Uriel\\\\remix-people\\\\remix-people\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/people.$personId_.edit.tsx\";\nimport * as route2 from \"./routes/groups.$groupId_.edit.tsx\";\nimport * as route3 from \"./routes/people.$personId.tsx\";\nimport * as route4 from \"./routes/groups.$groupId.tsx\";\nimport * as route5 from \"./routes/groups.tsx\";\nimport * as route6 from \"./routes/people.tsx\";\nimport * as route7 from \"./routes/_index.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/people.$personId_.edit\": {\n      id: \"routes/people.$personId_.edit\",\n      parentId: \"routes/people\",\n      path: \":personId/edit\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/groups.$groupId_.edit\": {\n      id: \"routes/groups.$groupId_.edit\",\n      parentId: \"routes/groups\",\n      path: \":groupId/edit\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/people.$personId\": {\n      id: \"routes/people.$personId\",\n      parentId: \"routes/people\",\n      path: \":personId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/groups.$groupId\": {\n      id: \"routes/groups.$groupId\",\n      parentId: \"routes/groups\",\n      path: \":groupId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/groups\": {\n      id: \"routes/groups\",\n      parentId: \"root\",\n      path: \"groups\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/people\": {\n      id: \"routes/people\",\n      parentId: \"root\",\n      path: \"people\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route7\n    }\n  };"],
  "mappings": "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",
  "names": ["jsxDEV", "mongoose", "mongoose", "jsxDEV", "action", "loader", "useLoaderData", "Form", "redirect", "useNavigate", "invariant", "jsxDEV", "loader", "invariant", "action", "redirect", "useLoaderData", "useNavigate", "Form", "action", "Person", "links", "loader", "meta", "redirect", "Form", "useLoaderData", "invariant", "jsxDEV", "jsxDEV", "jsxDEV", "meta", "links", "loader", "invariant", "action", "redirect", "Person", "useLoaderData", "Form", "action", "Group", "links", "loader", "meta", "redirect", "Form", "NavLink", "useLoaderData", "invariant", "NavLink", "jsxDEV", "jsxDEV", "meta", "links", "loader", "invariant", "action", "redirect", "Group", "useLoaderData", "NavLink", "Form", "action", "loader", "meta", "Form", "Outlet", "useLoaderData", "jsxDEV", "meta", "loader", "action", "useLoaderData", "Form", "Outlet", "action", "loader", "meta", "json", "Form", "Link", "Outlet", "useLoaderData", "jsxDEV", "meta", "loader", "action", "json", "useLoaderData", "Form", "Link", "Outlet", "links", "meta", "NavLink", "jsxDEV", "meta", "links", "NavLink"]
}
