{
  "version": 3,
  "sources": ["../../../app/routes/people.$personId_.edit.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\people.$personId_.edit.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\people.$personId_.edit.tsx\");\n  import.meta.hot.lastModified = \"1698675109821.4753\";\n}\n// REMIX HMR END\n\nimport { useLoaderData } from \"@remix-run/react\";\nimport { Form, redirect, useNavigate } from \"react-router-dom\";\nimport invariant from \"tiny-invariant\";\nimport { getPersonById, updatePerson } from \"~/api/people\";\nexport const loader = async ({\n  params\n}) => {\n  invariant(params.personId, \"Missing personId param\");\n  const person = await getPersonById(params.personId);\n  if (!person) {\n    throw new Response(\"Not Found\", {\n      status: 404\n    });\n  }\n  return person;\n};\nexport const action = async ({\n  params,\n  request\n}) => {\n  invariant(params.personId, \"Missing person Id param\");\n  const formData = await request.formData();\n  // const updates = Object.fromEntries(formData);\n  const name = String(formData.get('name'));\n  await updatePerson(params.personId, name);\n  return redirect(`/people/${params.personId}`);\n};\nexport default function EditPerson() {\n  _s();\n  const person = useLoaderData();\n  const navigate = useNavigate();\n  return <Form id=\"contact-form\" method=\"post\">\r\n            <p>\r\n                <span>Name:</span>\r\n                <input defaultValue={person.name} aria-label=\"name\" name=\"name\" type=\"text\" placeholder=\"Name\" />\r\n            </p>\r\n            <p>\r\n                <button type=\"submit\" name=\"cancel\">Save</button>\r\n                <button onClick={() => navigate(-1)} type=\"button\">\r\n                    Cancel\r\n                </button>\r\n            </p>\r\n        </Form>;\n}\n_s(EditPerson, \"Byv+3e8pmpoo4IrR9xpMgAj42f0=\", false, function () {\n  return [useLoaderData, useNavigate];\n});\n_c = EditPerson;\nvar _c;\n$RefreshReg$(_c, \"EditPerson\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAsBA;AAgCgB;AArDhB,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,kDAAoD,EAAE;AAAA,EAC/F;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAyC;AACzC,cAAY,IAAI,eAAe;AACjC;AA8Be,SAAR,aAA8B;AACnC,KAAG;AACH,QAAM,SAAS,cAAc;AAC7B,QAAM,WAAW,YAAY;AAC7B,SAAO,mDAAC,QAAK,IAAG,gBAAe,QAAO,QAC5B;AAAA,uDAAC,OACG;AAAA,yDAAC,UAAK,qBAAN;AAAA;AAAA;AAAA;AAAA,aAAW;AAAA,MACX,mDAAC,WAAM,cAAc,OAAO,MAAM,cAAW,QAAO,MAAK,QAAO,MAAK,QAAO,aAAY,UAAxF;AAAA;AAAA;AAAA;AAAA,aAA+F;AAAA,SAFnG;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IACA,mDAAC,OACG;AAAA,yDAAC,YAAO,MAAK,UAAS,MAAK,UAAS,oBAApC;AAAA;AAAA;AAAA;AAAA,aAAwC;AAAA,MACxC,mDAAC,YAAO,SAAS,MAAM,SAAS,EAAE,GAAG,MAAK,UAAS,sBAAnD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,OAVH;AAAA;AAAA;AAAA;AAAA,SAWD;AACR;AACA,GAAG,YAAY,gCAAgC,OAAO,WAAY;AAChE,SAAO,CAAC,eAAe,WAAW;AACpC,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,YAAY;AAE7B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
