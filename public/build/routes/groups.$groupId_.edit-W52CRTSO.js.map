{
  "version": 3,
  "sources": ["../../../app/routes/groups.$groupId_.edit.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\groups.$groupId_.edit.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\groups.$groupId_.edit.tsx\");\n  import.meta.hot.lastModified = \"1698670890493.5386\";\n}\n// REMIX HMR END\n\nimport { useLoaderData } from \"@remix-run/react\";\nimport { Form, redirect, useNavigate } from \"react-router-dom\";\nimport invariant from \"tiny-invariant\";\nimport { getGroupById, updateGroup } from \"~/api/groups\";\nexport const loader = async ({\n  params\n}) => {\n  invariant(params.groupId, \"Missing groupId param\");\n  const person = await getGroupById(params.groupId);\n  if (!person) {\n    throw new Response(\"Not Found\", {\n      status: 404\n    });\n  }\n  return person;\n};\nexport const action = async ({\n  params,\n  request\n}) => {\n  invariant(params.groupId, \"Missing groupId param\");\n  const formData = await request.formData();\n  // const updates = Object.fromEntries(formData);\n  const name = String(formData.get('name'));\n  await updateGroup(params.groupId, name);\n  return redirect(`/groups/${params.groupId}`);\n};\nexport default function EditGroup() {\n  _s();\n  const group = useLoaderData();\n  const navigate = useNavigate();\n  return <Form id=\"contact-form\" method=\"post\">\r\n            <p>\r\n                <span>Name</span>\r\n                <input defaultValue={group.name} aria-label=\"name\" name=\"name\" type=\"text\" placeholder=\"Name\" />\r\n            </p>\r\n            <p>\r\n                <button type=\"submit\" name=\"cancel\">Save</button>\r\n                <button onClick={() => navigate(-1)} type=\"button\">\r\n                    Cancel\r\n                </button>\r\n            </p>\r\n        </Form>;\n}\n_s(EditGroup, \"FRTQ9SYfp8UiW5Px2mMo7uguU5k=\", false, function () {\n  return [useLoaderData, useNavigate];\n});\n_c = EditGroup;\nvar _c;\n$RefreshReg$(_c, \"EditGroup\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAsBA;AAgCgB;AArDhB,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,iDAAmD,EAAE;AAAA,EAC9F;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAwC;AACxC,cAAY,IAAI,eAAe;AACjC;AA8Be,SAAR,YAA6B;AAClC,KAAG;AACH,QAAM,QAAQ,cAAc;AAC5B,QAAM,WAAW,YAAY;AAC7B,SAAO,mDAAC,QAAK,IAAG,gBAAe,QAAO,QAC5B;AAAA,uDAAC,OACG;AAAA,yDAAC,UAAK,oBAAN;AAAA;AAAA;AAAA;AAAA,aAAU;AAAA,MACV,mDAAC,WAAM,cAAc,MAAM,MAAM,cAAW,QAAO,MAAK,QAAO,MAAK,QAAO,aAAY,UAAvF;AAAA;AAAA;AAAA;AAAA,aAA8F;AAAA,SAFlG;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IACA,mDAAC,OACG;AAAA,yDAAC,YAAO,MAAK,UAAS,MAAK,UAAS,oBAApC;AAAA;AAAA;AAAA;AAAA,aAAwC;AAAA,MACxC,mDAAC,YAAO,SAAS,MAAM,SAAS,EAAE,GAAG,MAAK,UAAS,sBAAnD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,OAVH;AAAA;AAAA;AAAA;AAAA,SAWD;AACR;AACA,GAAG,WAAW,gCAAgC,OAAO,WAAY;AAC/D,SAAO,CAAC,eAAe,WAAW;AACpC,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,WAAW;AAE5B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
